{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialPlayerState = {\n  play: false,\n  shuffle: false,\n  loop: false,\n  volume: 0,\n  forward: false,\n  backward: false\n};\nconst initialState = {\n  player: initialPlayerState\n};\nconst musicSlice = createSlice({\n  name: \"music player\",\n  initialState,\n  reducers: {\n    setPlay: (state, action) => {\n      state.player.play = action.payload;\n    },\n    setShuffle: (state, action) => {\n      state.player.shuffle = action.payload;\n    },\n    setLoop: (state, action) => {\n      state.player.loop = action.payload;\n    },\n    setVolume: (state, action) => {\n      state.player.volume = action.payload;\n    },\n    setForward: (state, action) => {\n      state.player.forward = action.payload;\n    },\n    setBackward: (state, action) => {\n      state.player.backward = action.payload;\n    }\n  }\n});\nexport const {\n  setPlay,\n  setShuffle,\n  setLoop,\n  setVolume,\n  setBackward,\n  set\n} = musicSlice.actions;\nexport default musicSlice.reducer;","map":{"version":3,"names":["createSlice","initialPlayerState","play","shuffle","loop","volume","forward","backward","initialState","player","musicSlice","name","reducers","setPlay","state","action","payload","setShuffle","setLoop","setVolume","setForward","setBackward","set","actions","reducer"],"sources":["/home/hemangkatariya/Hemang Katariya/ReactJS Prectice/Music-player/src/app/features/music/musicSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\ninterface PlayerState {\n  play: boolean;\n  shuffle: boolean;\n  loop: boolean;\n  volume: number;\n  forward:boolean;\n  backward:boolean;\n}\n\nconst initialPlayerState: PlayerState = {\n  play: false,\n  shuffle: false,\n  loop: false,\n  volume: 0,\n  forward: false,\n  backward: false,\n};\n\nconst initialState: { player: PlayerState } = {\n  player: initialPlayerState,\n};\n\nconst musicSlice = createSlice({\n  name: \"music player\",\n  initialState,\n  reducers: {\n    setPlay: (state, action: PayloadAction<boolean>) => {\n      state.player.play = action.payload;\n    },\n    setShuffle: (state, action: PayloadAction<boolean>) => {\n      state.player.shuffle = action.payload;\n    },\n    setLoop: (state, action: PayloadAction<boolean>) => {\n      state.player.loop = action.payload;\n    },\n    setVolume: (state, action: PayloadAction<number>) => {\n      state.player.volume = action.payload;\n    },\n    setForward: (state, action: PayloadAction<boolean>) => {\n      state.player.forward = action.payload;\n    },\n    setBackward: (state, action: PayloadAction<boolean>) => {\n      state.player.backward = action.payload;\n    },\n  },\n});\n\nexport const { setPlay, setShuffle, setLoop,setVolume,setBackward, set } = musicSlice.actions;\n\nexport default musicSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAuB,kBAAkB;AAU7D,MAAMC,kBAA+B,GAAG;EACtCC,IAAI,EAAE,KAAK;EACXC,OAAO,EAAE,KAAK;EACdC,IAAI,EAAE,KAAK;EACXC,MAAM,EAAE,CAAC;EACTC,OAAO,EAAE,KAAK;EACdC,QAAQ,EAAE;AACZ,CAAC;AAED,MAAMC,YAAqC,GAAG;EAC5CC,MAAM,EAAER;AACV,CAAC;AAED,MAAMS,UAAU,GAAGV,WAAW,CAAC;EAC7BW,IAAI,EAAE,cAAc;EACpBH,YAAY;EACZI,QAAQ,EAAE;IACRC,OAAO,EAAEA,CAACC,KAAK,EAAEC,MAA8B,KAAK;MAClDD,KAAK,CAACL,MAAM,CAACP,IAAI,GAAGa,MAAM,CAACC,OAAO;IACpC,CAAC;IACDC,UAAU,EAAEA,CAACH,KAAK,EAAEC,MAA8B,KAAK;MACrDD,KAAK,CAACL,MAAM,CAACN,OAAO,GAAGY,MAAM,CAACC,OAAO;IACvC,CAAC;IACDE,OAAO,EAAEA,CAACJ,KAAK,EAAEC,MAA8B,KAAK;MAClDD,KAAK,CAACL,MAAM,CAACL,IAAI,GAAGW,MAAM,CAACC,OAAO;IACpC,CAAC;IACDG,SAAS,EAAEA,CAACL,KAAK,EAAEC,MAA6B,KAAK;MACnDD,KAAK,CAACL,MAAM,CAACJ,MAAM,GAAGU,MAAM,CAACC,OAAO;IACtC,CAAC;IACDI,UAAU,EAAEA,CAACN,KAAK,EAAEC,MAA8B,KAAK;MACrDD,KAAK,CAACL,MAAM,CAACH,OAAO,GAAGS,MAAM,CAACC,OAAO;IACvC,CAAC;IACDK,WAAW,EAAEA,CAACP,KAAK,EAAEC,MAA8B,KAAK;MACtDD,KAAK,CAACL,MAAM,CAACF,QAAQ,GAAGQ,MAAM,CAACC,OAAO;IACxC;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH,OAAO;EAAEI,UAAU;EAAEC,OAAO;EAACC,SAAS;EAACE,WAAW;EAAEC;AAAI,CAAC,GAAGZ,UAAU,CAACa,OAAO;AAE7F,eAAeb,UAAU,CAACc,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}